# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: "Main"

on:
  push:
    tags: ["*"]
    branches: ["*"]
  pull_request:
    branches: ["*"]
  schedule:
    - cron: "25 12 * * 3"
  workflow_dispatch:

permissions: {}

jobs:
  build:
    name: "Build on Python ${{ matrix.python_version }} on ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"
    permissions:
      contents: "read"
    strategy:
      fail-fast: false
      matrix:
        python_version: ["3.x", "3.10", "pypy3.10"]
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]
    steps:
      - name: "Checkout"
        uses: "actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332"
      - name: "Use Python ${{ matrix.python_version }}"
        uses: "actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3"
        with:
          python-version: "${{ matrix.python_version }}"
          check-latest: true
          cache: "pip"
          cache-dependency-path: |
            **/requirements.txt
            **/requirements-dev.txt
      - name: "Build"
        run: "make all"
      - name: "Verify that the working tree is clean"
        shell: "bash"
        run: '[ -z "$(git status --porcelain ./)" ] || { git diff >&2; exit 1; }'

  build-push-docker:
    name: "Build and push Docker images"
    needs: ["build"]
    runs-on: "ubuntu-latest"
    permissions:
      contents: "read"
      packages: "write"
    steps:
      - name: "Checkout"
        uses: "actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332"
      - name: "Set up QEMU"
        uses: "docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf"
      - name: "Set up Docker Buildx"
        uses: "docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db"
      - name: "Login to GitHub Container Registry"
        if: "github.event_name != 'pull_request'"
        uses: "docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567"
        with:
          registry: "ghcr.io"
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"
      - name: "Extract metadata"
        id: "meta"
        uses: "docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81"
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
      - name: "Build and push"
        uses: "docker/build-push-action@5cd11c3a4ced054e52742c5fd54dca954e0edd85"
        with:
          context: "./"
          platforms: "linux/amd64,linux/arm64"
          tags: "${{ steps.meta.outputs.tags }}"
          labels: "${{ steps.meta.outputs.labels }}"
          push: "${{ github.event_name != 'pull_request' }}"

  publish-github-release:
    name: "Publish GitHub release"
    if: "startsWith(github.ref, 'refs/tags/v')"
    needs: ["build", "build-push-docker"]
    runs-on: "ubuntu-latest"
    permissions:
      contents: "write"
    steps:
      - name: "Publish"
        uses: "hectorm/ghaction-release@066200d04c3549852afa243d631ea3dc93390f68"
