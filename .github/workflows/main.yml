# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: "Main"

on:
  push:
    tags: ["*"]
    branches: ["*"]
  pull_request:
    branches: ["*"]
  schedule:
    - cron: "25 12 * * 3"
  workflow_dispatch:

permissions: {}

jobs:
  build:
    name: "Build on Python ${{ matrix.python_version }} on ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"
    permissions:
      contents: "read"
    strategy:
      fail-fast: false
      matrix:
        python_version: ["3.x", "3.10", "pypy3.10"]
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]
    steps:
      - name: "Checkout"
        uses: "actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683"
      - name: "Use Python ${{ matrix.python_version }}"
        uses: "actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065"
        with:
          python-version: "${{ matrix.python_version }}"
          check-latest: true
          cache: "pip"
          cache-dependency-path: |
            **/requirements.txt
            **/requirements-dev.txt
      - name: "Build"
        run: "make all"
      - name: "Verify that the working tree is clean"
        shell: "bash"
        run: '[ -z "$(git status --porcelain ./)" ] || { git diff >&2; exit 1; }'

  build-push-docker:
    name: "Build and push Docker images"
    needs: ["build"]
    runs-on: "ubuntu-latest"
    permissions:
      contents: "read"
      packages: "write"
    steps:
      - name: "Checkout"
        uses: "actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683"
      - name: "Set up QEMU"
        uses: "docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392"
      - name: "Set up Docker Buildx"
        uses: "docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435"
      - name: "Login to GitHub Container Registry"
        if: "github.event_name != 'pull_request'"
        uses: "docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772"
        with:
          registry: "ghcr.io"
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"
      - name: "Extract metadata"
        id: "meta"
        uses: "docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804"
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
      - name: "Build and push"
        uses: "docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83"
        with:
          context: "./"
          platforms: "linux/amd64,linux/arm64"
          tags: "${{ steps.meta.outputs.tags }}"
          labels: "${{ steps.meta.outputs.labels }}"
          push: "${{ github.event_name != 'pull_request' }}"

  publish-github-release:
    name: "Publish GitHub release"
    if: "startsWith(github.ref, 'refs/tags/v')"
    needs: ["build", "build-push-docker"]
    runs-on: "ubuntu-latest"
    permissions:
      contents: "write"
    steps:
      - name: "Publish"
        uses: "hectorm/ghaction-release@066200d04c3549852afa243d631ea3dc93390f68"
